---js
{
  pagination: {
    data: "collections.all",
    size: Infinity,
    alias: "redirect",
    addAllPagesToCollections: false,
  },
  printRedirect: ({ data: { redirect_from = [], slug }, url }) => {
    if (!Array.isArray(redirect_from) && typeof redirect_from !== 'string') {
      redirect_from = null
    }
    const redirFrom = new Set(
      Array.isArray(redirect_from) ? redirect_from
        : redirect_from ? [redirect_from]
        : []
    )
    redirFrom.add(url)
    if (!slug) {
      const slugmatch = url.match(/^\/[0-9]{4}\/[0-9]{2}\/([^\/]+)/) || []
      slug = slugmatch[1]
    }
    if (slug) {
      redirFrom.add('/p/' + slug)
    }
    const out = []
    for (const from of redirFrom) {
      if (from.slice(-1) !== '/') {
        redirFrom.add(from + '/')
      } else {
        redirFrom.add(from.replace(/\/+$/, ''))
      }
      if (from !== url && from !== url.replace(/\/+$/, '')) {
        out.push([from, url].join('\t'))
      }
      if (from) {
        out.push([from + ')', url].join('\t'))
      }
    }
    return out.join('\n') + '\n'
  },
  permalink: "/_redirects",
  eleventyExcludeFromCollections: true,
}
---
{%- for page in collections.all -%}
  {%- if page.url -%}
{{ printRedirect(page) }}
  {%- endif -%}
{%- endfor -%}
